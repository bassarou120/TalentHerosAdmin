<?php

namespace App\Filament\Resources\CampagneResource\Pages;

use App\Filament\Resources\CampagneResource;
use App\Models\Campagne;
use App\Models\VisibiliteAbonne;
use App\Models\VisibilitePays;
use Filament\Actions;
use Filament\Resources\Pages\CreateRecord;
use Illuminate\Database\Eloquent\Model;

class CreateCampagne extends CreateRecord
{
    protected static string $resource = CampagneResource::class;


    protected function mutateFormDataBeforeCreate(array $data): array
    {



        return $data;
    }


    protected function handleRecordCreation(array $data): Model
    {

        // First, create the Campagne record


        // Check the visibility type and insert corresponding visibilities
        if ($data['visibilite'] == "ABONNES PAYS") {

            $lsPays = $data['pays'];
            unset($data['pays']);
            $campagne = Campagne::create($data);  // Ensure the campaign is created and saved
            // Now you have a valid campagne ID
            $campagneId = $campagne->id;
            foreach ($lsPays as $paysId) {
                VisibilitePays::create([
                    'campagne_id' => $campagneId,  // Use the valid campagne ID
                    'pay_id' => $paysId,
                ]);
            }
        }elseif($data['visibilite'] == "GROUPE D'ABONNES") {
            $lsAbonne = $data['abonnes'];
            unset($data['abonnes']);

            $campagne = Campagne::create($data);  // Ensure the campaign is created and saved

            // Now you have a valid campagne ID
            $campagneId = $campagne->id;
            foreach ($lsAbonne as $abonneId) {
                VisibiliteAbonne::create([
                    'campagne_id' => $campagneId,  // Use the valid campagne ID
                    'user_id' => $abonneId,
                ]);
            }
        }else{
            $campagne = Campagne::create($data);
        }

        // Return the result from the parent function
        return  $campagne;


//        return  parent::handleRecordCreation($data);
//        $lastCampagne= Campagne:: latest()->first();
//
//        $lastCampagneId=$lastCampagne !=null ?  $lastCampagne->id+1 : 1;
//
//
//        if ($data['visibilite']=="ABONNES PAYS"){
//            $lsPays=$data['pays'];
//            unset($data['pays']);
//            foreach ($lsPays as $paysId) {
//                VisibilitePays::create([
//                    'campagne_id' => $lastCampagneId,
//                    'pay_id' => $paysId,
//                ]);
//            }
//
//        }
//
//        if ($data['visibilite']=="GROUPE D'ABONNES"){
//            $lsAbonne=$data['abonnes'];
//            unset($data['abonnes']);
//            foreach ($lsAbonne as $abonneId) {
//                VisibiliteAbonne::create([
//                    'campagne_id' => $lastCampagneId,
//                    'user_id' => $abonneId,
//                ]);
//            }
//
//        }
//        return parent::handleRecordCreation($data); // TODO: Change the autogenerated stub
    }

    protected function getRedirectUrl(): string
    {
        // Rediriger vers la page d'index après la création
        return $this->getResource()::getUrl('index');
    }








//    protected function afterSave(): void
//    {
//      dd(  $this->record );
//    }



}
